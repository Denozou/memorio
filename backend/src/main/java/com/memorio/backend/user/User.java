package com.memorio.backend.user;import jakarta.persistence.*;import org.hibernate.annotations.UuidGenerator;import jakarta.persistence.Enumerated;import jakarta.persistence.EnumType;import java.time.OffsetDateTime;import java.util.HashSet;import java.util.Set;import java.util.UUID;@Entity@Table(name="users")public class User {    @Id    @UuidGenerator    @GeneratedValue(strategy = GenerationType.IDENTITY)    @Column(name="id", columnDefinition = "uuid")    private UUID id;    @Column(name="email", nullable = false, unique = true)    private String email;    @Column(name="password_hash", nullable = true)    private String passwordHash;    @Column(name = "display_name", length = 100)    private String displayName;    @Enumerated(EnumType.STRING)    @Column(name = "role", nullable = false)    private Role role = Role.USER;    @Column(name = "skill_level", nullable = false)    private int skillLevel = 1;    @Column(name = "preferred_language", length = 8)    private String preferredLanguage;    @Column(name = "picture_url")    private String pictureUrl;    @OneToMany(mappedBy = "user", cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.LAZY)    private Set<UserIdentity>identities = new HashSet<>();    @Column(name = "created_at", insertable = false, updatable = false)    private OffsetDateTime createdAt;    @Column(name = "updated_at", insertable = false, updatable = false)    private OffsetDateTime updatedAt;    public UUID getId() { return id; }    public void setId(UUID id) { this.id = id; }    public String getEmail() { return email; }    public void setEmail(String email) { this.email = email; }    public String getPasswordHash() { return passwordHash; }    public void setPasswordHash(String passwordHash) { this.passwordHash = passwordHash; }    public String getDisplayName(){return displayName;}    public void setDisplayName(String displayName){        this.displayName = displayName;    }    public Role getRole(){return role;}    public void setRole(Role role){        this.role = role;    }    public int getSkillLevel(){return skillLevel;}    public void setSkillLevel(int skillLevel){this.skillLevel = skillLevel;}    public String getPreferredLanguage(){return preferredLanguage;}    public void setPreferredLanguage(String preferredLanguage){        this.preferredLanguage = preferredLanguage;    }    public String getPictureUrl() { return pictureUrl; }    public void setPictureUrl(String pictureUrl) {this.pictureUrl = pictureUrl;}    public Set<UserIdentity> getIdentities(){return identities;}    public void setIdentities(Set<UserIdentity> identities){        this.identities = identities;    }    public void addIdentity(UserIdentity identity){        identities.add(identity);        identity.setUser(this);    }    public void removeIdentity(UserIdentity identity){        identities.remove(identity);        identity.setUser(null);    }    public OffsetDateTime getCreatedAt() { return createdAt; }    public OffsetDateTime getUpdatedAt() { return updatedAt; }}